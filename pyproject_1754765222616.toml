[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cryptobot-ai-pro"
version = "1.0.0"
description = "Профессиональный AI-торговый бот для криптовалют с комплексной системой анализа"
authors = [
    {name = "CryptoBot AI Team", email = "support@cryptobot-ai.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["crypto", "trading", "bot", "ai", "bitcoin", "ethereum", "technical-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core web framework
    "streamlit>=1.28.0",
    # Data processing and analysis
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    # Technical analysis
    "TA-Lib>=0.4.25",
    # Plotting and visualization
    "plotly>=5.15.0",
    # HTTP requests and web scraping
    "requests>=2.28.0",
    "trafilatura>=1.6.0",
    "feedparser>=6.0.0",
    # WebSocket support for real-time data
    "websockets>=11.0.0",
    # Mathematical and scientific computing
    "scipy>=1.9.0",
    # Cryptography and security
    "cryptography>=3.4.8",
    # Database support (sqlite3 is built-in with Python, no separate install needed)
    # Environment variables
    "python-dotenv>=0.19.0",
    # Date and time utilities
    "python-dateutil>=2.8.0",
    # Logging and monitoring
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]

[project.urls]
Homepage = "https://github.com/cryptobot-ai/cryptobot-ai-pro"
Documentation = "https://docs.cryptobot-ai.com"
Repository = "https://github.com/cryptobot-ai/cryptobot-ai-pro"
Issues = "https://github.com/cryptobot-ai/cryptobot-ai-pro/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["cryptobot"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "talib.*",
    "plotly.*",
    "streamlit.*",
    "feedparser.*",
    "trafilatura.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "env/*",
    "*/site-packages/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]
